name: Upload Files to GitHub
on:
   workflow_dispatch

jobs:
  upload_files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download 7z Archive
        run: curl -L -o archive.7z https://github.com/stenzek/duckstation-ext-qt-minimal/releases/download/latest/deps-x64.7z

      - name: Extract 7z Archive
        run: |
          npm install node-7z
          node -e 'const Seven = require("node-7z");
                   async function extractArchive() {
                     try {
                       await Seven.extractFull("archive.7z", "temp_extracted");
                       console.log("Extraction completed successfully");
                     } catch (error) {
                       console.error("Error during extraction:", error);
                       process.exit(1); // Exit with non-zero status code to indicate failure
                     }
                   }
                   extractArchive();'

      - name: List Extracted Files
        run: ls temp_extracted

      - name: Upload Files to GitHub
        id: upload
        env:
          REPO_URL: ${{ secrets.REPO_URL }}
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          cd temp_extracted
          for file in *; do
            if [ -f "$file" ]; then
              echo "Uploading $file to destination directory, overwriting any existing files."
              base64_file=$(base64 -w 0 $file)
              curl -X PUT -H "Authorization: token $MY_GITHUB_TOKEN" $REPO_URL/dep/msvc/$file -d '{"content": "'"$base64_file"'"}'
            elif [ -d "$file" ]; then
              echo "Uploading $file (directory) to destination directory."
              # Add logic here to upload directory contents recursively
              # Example: curl -X PUT -H "Authorization: token $MY_GITHUB_TOKEN" $REPO_URL/dep/msvc/$file -d '{"content": "directory_content"}'
            else
              echo "$file is not a regular file or directory, skipping..."
            fi
          done

      - name: Cleanup
        run: rm -rf temp_extracted

      - name: Create Commit
        env:
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          commit_message="Updated dependencies"
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          git add .
          git diff --quiet && echo "No changes to commit" || git commit -m "$commit_message"
          git push origin HEAD:uwp
