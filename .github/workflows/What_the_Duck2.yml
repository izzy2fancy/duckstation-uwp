name: Duck-Building Workflow

on:
  workflow_dispatch:

jobs:
  Build:
    runs-on: windows-latest

    steps:
      - name: Load environment variables
        run: |
          echo "APPX_BUNDLE=${{ vars.APPX_BUNDLE }}" >> $GITHUB_ENV
          echo "BUILD_MODE=${{ vars.BUILD_MODE }}" >> $GITHUB_ENV
          echo "CONFIGURATION=${{ vars.CONFIGURATION }}" >> $GITHUB_ENV
          echo "NUGET_VERSION=${{ vars.NUGET_VERSION }}" >> $GITHUB_ENV
          echo "PACKAGE_OUTPUT_BASE_NAME=${{ vars.PACKAGE_OUTPUT_BASE_NAME }}" >> $GITHUB_ENV
          echo "PACKAGE_OUTPUT_DIR=${{ vars.PACKAGE_OUTPUT_DIR }}" >> $GITHUB_ENV
          echo "PACKAGE_OUTPUT_ROOT_DIR=${{ vars.PACKAGE_OUTPUT_ROOT_DIR }}" >> $GITHUB_ENV
          echo "PLATFORM=${{ vars.PLATFORM }}" >> $GITHUB_ENV
          echo "PROJECT_DIRECTORY=${{ vars.PROJECT_DIRECTORY }}" >> $GITHUB_ENV
          echo "PROJECT_PATH=${{ vars.PROJECT_PATH }}" >> $GITHUB_ENV        
          echo "SOLUTION_PATH=${{ vars.SOLUTION_PATH }}" >> $GITHUB_ENV

      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v2
        with: 
          msbuild-architecture: x64
        
      - name: Setup NuGet.exe for use with actions
        uses: NuGet/setup-nuget@v1.0.5     

      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: App Build
        run: |
         msbuild $GITHUB_ENV:PROJECT_PATH 
         /p:Platform=$GITHUB_ENV:PLATFORM 
         /p:Configuration=$GITHUB_ENV:CONFIGURATION 
         /p:UapAppxPackageBuildMode=$GITHUB_ENV:BUILD_MODE 
         /p:AppxBundle=$GITHUB_ENV:APPX_BUNDLE 
         /p:PackageCertificateKeyFile=${{ secrets.DUCKSTATION_PFX }} 
         /p:PackageCertificatePassword=${{ secrets.PFX_PASSWORD }} 
         /p:AppxPackageTestDir="${GITHUB_ENV:PACKAGE_OUTPUT_ROOT_DIR}\${{ steps.get_package_name.outputs.PACKAGE_NAME }}\" 
         /restore
